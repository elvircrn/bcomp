(B (FUNCDEF eql (FHEADER (FPARAM a )(FPARAM b )) (EQU (VAR a)(VAR b)) ) (FUNCDEF neq (FHEADER (FPARAM a )(FPARAM b )) (NEQU (VAR a)(VAR b)) ) (FUNCDEF _lt (FHEADER (FPARAM a )(FPARAM b )) (LESSTHAN (VAR a)(VAR b)) ) (FUNCDEF leq (FHEADER (FPARAM a )(FPARAM b )) (LESSEQUTHAN (VAR a)(VAR b)) ) (FUNCDEF _gt (FHEADER (FPARAM a )(FPARAM b )) (GREATERTHAN (VAR a)(VAR b)) ) (FUNCDEF geq (FHEADER (FPARAM a )(FPARAM b )) (GREATEREQUTHAN (VAR a)(VAR b)) ) (FUNCDEF test (FHEADER (FPARAM a )(FPARAM b )(FPARAM c )(FPARAM d )(FPARAM e )(FPARAM f )) (BLOCK (FUNCCALL (VAR printf)(ARG (STRING `"%d, %d, %d*n"`)) (ARG (FUNCCALL (VAR eql)(ARG (VAR a)) (ARG (VAR b)) ) ) (ARG (FUNCCALL (VAR eql)(ARG (VAR c)) (ARG (VAR d)) ) ) (ARG (FUNCCALL (VAR eql)(ARG (VAR e)) (ARG (VAR f)) ) ) ) (FUNCCALL (VAR printf)(ARG (STRING `"%d, %d, %d*n"`)) (ARG (FUNCCALL (VAR neq)(ARG (VAR a)) (ARG (VAR b)) ) ) (ARG (FUNCCALL (VAR neq)(ARG (VAR c)) (ARG (VAR d)) ) ) (ARG (FUNCCALL (VAR neq)(ARG (VAR e)) (ARG (VAR f)) ) ) ) (FUNCCALL (VAR printf)(ARG (STRING `"%d, %d, %d*n"`)) (ARG (FUNCCALL (VAR _lt)(ARG (VAR a)) (ARG (VAR b)) ) ) (ARG (FUNCCALL (VAR _lt)(ARG (VAR c)) (ARG (VAR d)) ) ) (ARG (FUNCCALL (VAR _lt)(ARG (VAR e)) (ARG (VAR f)) ) ) ) (FUNCCALL (VAR printf)(ARG (STRING `"%d, %d, %d*n"`)) (ARG (FUNCCALL (VAR leq)(ARG (VAR a)) (ARG (VAR b)) ) ) (ARG (FUNCCALL (VAR leq)(ARG (VAR c)) (ARG (VAR d)) ) ) (ARG (FUNCCALL (VAR leq)(ARG (VAR e)) (ARG (VAR f)) ) ) ) (FUNCCALL (VAR printf)(ARG (STRING `"%d, %d, %d*n"`)) (ARG (FUNCCALL (VAR _gt)(ARG (VAR a)) 