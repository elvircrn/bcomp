# Random program
(B (FUNCDEF fun3 (FHEADER (FPARAM x )(FPARAM y )(FPARAM z )) (BLOCK (DECLSTAT (LVARDEF a ) (LVARDEF b ) (LVARDEF c ) (MOV (VAR a)(INT 2)) ) (MOV (VAR b)(INT 3)) (MOV (VAR c)(ADD (VAR a)(VAR b)) ) ) ) (FUNCDEF main (FHEADER ) (BLOCK (DECLSTAT (LVARDEF a ) (LVARDEF b ) (LVARDEF c ) (MOV (VAR a)(INT 1)) ) (MOV (VAR b)(INT 2)) (MOV (VAR c)(INT 3)) (FUNCCALL (VAR fun3)(ARG (VAR a)) (ARG (VAR b)) (ARG (VAR c)) ) (MOV (VAR a)(INT 2)) (MOV (VAR b)(INT 1)) (FUNCCALL (VAR fun3)(ARG (INT 1)) (ARG (VAR b)) (ARG (INT 2)) ) (FUNCCALL (VAR fun3)(ARG (INT 1)) (ARG (VAR b)) (ARG (STRING `"123123"`)) ) ) ) )


# Post increment
(B (FUNCDEF main (FHEADER ) (BLOCK (DECLSTAT (LVARDEF i ) (MOV (VAR i)(ONUMBER 0)) ) (POSTINC (VAR i)) (FUNCCALL (VAR printf)(ARG (STRING `"%d\n"`)) (ARG (VAR i)) ) ) ) )

# Functiona call
B
 FUNCDEF f
  FHEADER
   FPARAM a
   FPARAM b
   FPARAM c
  BLOCK
 FUNCDEF main
  FHEADER
  BLOCK

# Fast Pow
B
 FUNCDEF f
  FHEADER
   FUNCDEF base
   FUNCDEF exp
  BLOCK
   IF
    EQU
     VAR exp
     INT 0
    BLOCK
     RETURNPARAM
      INT 1
   IF
    EQU
     VAR exp
     INT 1
    BLOCK
     RETURNPARAM
      VAR base
   IFELSE
    EQU
     MOD
      VAR exp
      INT 2
     INT 0
    BLOCK
     DECLSTAT
      LVARDEF t
      MOV
       VAR t
       FUNCCALL
        VAR f
        ARG
         VAR base
        ARG
         DIV
          VAR exp
          INT 2
     RETURNPARAM
      MUL
       VAR t
       VAR t
    BLOCK
     RETURNPARAM
      FUNCCALL
       VAR f
       ARG
        VAR base
       ARG
        SUB
         VAR exp
         INT 1
 FUNCDEF main
  FHEADER
  BLOCK
   FUNCCALL
    VAR printf
    ARG
     STRING "%d\n"
    ARG
     FUNCCALL
      VAR f
      ARG
       INT 2
      ARG
       INT 10

# Guessing game
B
 FUNCDEF main
  FHEADER
  BLOCK
   DECLSTAT
    LVARDEF left
    LVARDEF right
    LVARDEF guessCmp
    LVARDEF cnt
    MOV
     VAR cnt
     INT 1
   MOV
    VAR left
    INT 1
   MOV
    VAR right
    INT 100
   FUNCCALL
    VAR printf
    ARG
     STRING "Da li je tvoj broj %d?\n"
    ARG
     DIV
      ADD
       VAR left
       VAR right
      INT 2
   FUNCCALL
    VAR scanf
    ARG
     STRING "%d"
    ARG
     ADDROF
      VAR guessCmp
   WHILE
    NEQU
     VAR guessCmp
     INT 0
    BLOCK
     FUNCCALL
      VAR printf
      ARG
       STRING "Da li je tvoj broj %d?\n"
      ARG
       DIV
        ADD
         VAR left
         VAR right
        INT 2
     IFELSE
      LESSTHAN
       VAR guessCmp
       INT 0
      BLOCK
       MOV
        VAR right
        DIV
         ADD
          VAR left
          VAR right
         INT 2
      BLOCK
       MOV
        VAR left
        DIV
         ADD
          VAR left
          VAR right
         INT 2
     POSTINC
      VAR cnt
   FUNCCALL
    VAR printf
    ARG
     STRING "Trebalo mi je %d pokusaja da pogodim broj"
    ARG
     VAR cnt
   RETURN
   INT 0
